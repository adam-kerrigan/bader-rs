name: release

on:
  push:
    tags: ['v*']

env:
  RUST_BACKTRACE: 1

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-release-version.outputs.version }}
      upload-url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get release version from tag
        id: get-release-version
        run: |
          echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-release-version.outputs.version }}
          release_name: ${{ steps.get-release-version.outputs.version }}
          body_path: RELEASE.md
  build-linux:
    strategy:
      matrix:
        target:
        - i686-unknown-linux-gnu
        - x86_64-unknown-linux-gnu
    name: build (${{ matrix.target }})
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target ${{ matrix.target }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: target/${{ matrix.target }}/release/bader
        asset_name: bader-${{ needs.create-release.outputs.version }}-${{ matrix.target }}
        asset_content_type: application/octet-stream
  build-windows:
    strategy:
      matrix:
        target:
        - i686-pc-windows-gnu
        - x86_64-pc-windows-gnu
    name: build (${{ matrix.target }})
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target ${{ matrix.target }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: target/${{ matrix.target }}/release/bader.exe
        asset_name: bader-${{ needs.create-release.outputs.version }}-${{ matrix.target }}.exe
        asset_content_type: application/octet-stream
  build-macos:
    strategy:
      matrix:
        target:
        - x86_64-apple-darwin
    name: build (${{ matrix.target }})
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target ${{ matrix.target }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: target/${{ matrix.target }}/release/bader
        asset_name: bader-${{ needs.create-release.outputs.version }}-${{ matrix.target }}
        asset_content_type: application/octet-stream
  publish:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
    - uses: actions/checkout@v2
    - name: Publish crate
      uses: actions-rs/cargo@v1
      with:
        command: publish
        args: --verbose --token ${{ secrets.CARGO_PUBLISH_TOKEN }}
